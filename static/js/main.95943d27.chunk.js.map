{"version":3,"sources":["components/Container/Container.js","components/Section/Section.js","components/Feedbacks/FeedbackOptions.js","components/Feedbacks/Statistics.js","components/Notification/Notification.js","App.js","index.js","components/Feedbacks/Feedback.module.css","components/Container/Container.module.css","components/Section/Section.module.css"],"names":["Container","children","className","s","container","Section","title","task","FeedbackOptions","options","onLeaveFeedback","list","map","btn","button","type","onClick","name","id","Statistics","good","neutral","bad","total","positivePercentage","statistics","Math","round","Notification","message","feedbackBtn","App","state","handleIncrement","event","statValue","target","innerHTML","toLowerCase","setState","countTotalFeedback","countPositiveFeedbackPercentage","this","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"iRAMeA,MAJf,YAAkC,IAAbC,EAAY,EAAZA,SACnB,OAAO,qBAAKC,UAAWC,IAAEC,UAAlB,SAA8BH,K,gBCcxBI,MAdf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOL,EAAY,EAAZA,SACxB,OACE,0BAASC,UAAWC,IAAEI,KAAtB,UACGD,GAAS,6BAAKA,IACdL,M,gBCqBQO,EAzBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,qBAAKR,UAAWC,IAAEQ,KAAlB,SACGF,EAAQG,KAAI,SAAAC,GAAG,OACd,wBAEEX,UAAWC,IAAEW,OACbC,KAAK,SACLC,QAASN,EAJX,SAMGG,EAAII,MALAJ,EAAIK,UCgBFC,EApBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,8BACE,sBAAKtB,UAAWC,IAAEsB,WAAlB,UACE,0CAAaL,KACb,6CAAgBC,KAChB,yCAAYC,KACZ,2CAAcC,KACd,uDAA0BG,KAAKC,MAAMH,GAArC,aCASI,MARf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,+BAAOA,GAAW,6BAAKA,OCI1BC,EAAc,CAClB,CAAEZ,GAAI,QAASD,KAAM,QACrB,CAAEC,GAAI,QAASD,KAAM,WACrB,CAAEC,GAAI,QAASD,KAAM,QAmDRc,E,4MA/CbC,MAAQ,CACNZ,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPW,gBAAkB,SAAAC,GAChB,IAAMC,EAAYD,EAAME,OAAOC,UAAUC,cACzC,EAAKC,UAAS,SAAAP,GAAK,sBAAQG,EAAYH,EAAMG,GAAa,O,EAG5DK,mBAAqB,WACnB,OAAO,EAAKR,MAAMZ,KAAO,EAAKY,MAAMX,QAAU,EAAKW,MAAMV,K,EAG3DmB,gCAAkC,WAChC,OAAQ,EAAKT,MAAMZ,KAAO,EAAKoB,qBAAwB,K,uDAG/C,IAAD,EACwBE,KAAKV,MAA5BZ,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACvB,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAShB,MAAM,wBAAf,SACE,cAAC,EAAD,CACEG,QAASqB,EACTpB,gBAAiBgC,KAAKT,oBAI1B,cAAC,EAAD,CAAS3B,MAAM,aAAf,SACIoC,KAAKF,qBAGL,cAAC,EAAD,CACEpB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOmB,KAAKF,qBACZhB,mBAAoBkB,KAAKD,oCAP3B,cAAC,EAAD,CAAcZ,QAAQ,+B,GAjChBc,aCRlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,OAAS,yBAAyB,WAAa,+B,kBCAjED,EAAOC,QAAU,CAAC,UAAY,+B,kBCA9BD,EAAOC,QAAU,CAAC,KAAO,yB","file":"static/js/main.95943d27.chunk.js","sourcesContent":["import s from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nexport default Container;\n","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nfunction Section({ title, children }) {\n  return (\n    <section className={s.task}>\n      {title && <h2>{title}</h2>}\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\nimport s from './Feedback.module.css';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\n  <div className={s.list}>\n    {options.map(btn => (\n      <button\n        key={btn.id}\n        className={s.button}\n        type=\"button\"\n        onClick={onLeaveFeedback}\n      >\n        {btn.name}\n      </button>\n    ))}\n  </div>\n);\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n    }),\n  ),\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\nimport s from './Feedback.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <div>\n    <div className={s.statistics}>\n      <span>Good: {good}</span>\n      <span>Neutral: {neutral}</span>\n      <span>Bad: {bad}</span>\n      <span>Total: {total}</span>\n      <span>Positive feedback: {Math.round(positivePercentage)}%</span>\n    </div>\n  </div>\n);\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\n\nfunction Notification({ message }) {\n  return <span>{message && <h4>{message}</h4>}</span>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default Notification;\n","import React, { Component } from 'react';\nimport Container from './components/Container/Container';\nimport Section from './components/Section/Section';\nimport FeedbackOptions from './components/Feedbacks/FeedbackOptions';\nimport Statistics from './components/Feedbacks/Statistics';\nimport Notification from './components/Notification/Notification';\n\nconst feedbackBtn = [\n  { id: 'btn-1', name: 'Good' },\n  { id: 'btn-2', name: 'Neutral' },\n  { id: 'btn-3', name: 'Bad' },\n];\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleIncrement = event => {\n    const statValue = event.target.innerHTML.toLowerCase();\n    this.setState(state => ({ [statValue]: state[statValue] + 1 }));\n  };\n\n  countTotalFeedback = () => {\n    return this.state.good + this.state.neutral + this.state.bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    return (this.state.good / this.countTotalFeedback()) * 100;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <Container>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={feedbackBtn}\n            onLeaveFeedback={this.handleIncrement}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {!this.countTotalFeedback() ? (\n            <Notification message=\"No feedback given\" />\n          ) : (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          )}\n        </Section>\n      </Container>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Feedback_button__3DWIf\",\"statistics\":\"Feedback_statistics__2KUl4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__PVCKn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"task\":\"Section_task__3ZBlZ\"};"],"sourceRoot":""}